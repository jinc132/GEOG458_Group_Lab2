man_tract <- mergeIt(mantract)
total_tract <- mergeIt(total)
overall_bell <- mergeIt(overall)
overall_bell["WTUShare"] <- overall_bell$SI02 / overall_bell$S000
overall_bell["MANShare"] <- overall_bell$SI01 / overall_bell$S000
# Creating block level
block<- unique(od[,1:2])
nrow(check) == nrow(od)
# Added a count column for the number of sending blocks
block$count <- 1
# Get number of blocks "sending" jobs to work block
send_wb <- aggregate(. ~ w_geocode, data=block[,-2], FUN=sum)
# Use sum job variable S000 to get count of "jobs" to work block
jobs_wb <- aggregate(. ~ w_geocode, data=od[,c(1,3)], FUN=sum)
# Merge the two dataframes together by work block FIPS
work_block <- merge(send_wb, jobs_wb, by="w_geocode")
# Creates a file with home_tract and w_geocode
s <- unique(od[,c(1,15)])
# Added a count column for the number of sending tracts
s$tract_ct <- 1
library(reshape2)
?acast
wtod_tract[is.na(wtod_tract)] <- 0
# Produce a matrix with a worktract as ROW and hometract as COLUMN
wtod_tract <- acast(wt_tract, work_tract ~ home_tract, value.var = "SI02")
wtod_tract[is.na(wtod_tract)] <- 0
library(tidyverse)
library(tigris)
library(sf)
library(reshape2)
options(tigris_class = "sf")
options(tigris_use_cache = TRUE)
# Part 1
od <- read.csv('wa_od_main_JT00_2015.csv')
rac <- read.csv('wa_rac_S000_JT00_2015.csv')
wac <- read.csv('wa_wac_S000_JT00_2015.csv')
# Read in Bellevue city boundary shape file
wa_tracts <- st_read("cb_2017_53_tract_500k.shp")
# List of all the Census Tracts in Bellevue
bellevue_tracts <- c(227.01, 227.03, 228.01, 228.03, 229.01, 230, 231, 232.01,
232.02, 233, 234.01, 234.03, 234.04, 235, 236.01, 236.03,
236.04, 237, 238.01, 238.03, 238.04, 239, 240, 247.01, 247.02, 248, 249.01,
249.02, 249.03, 250.01, 250.03, 250.05, 250.06)
# Find all the Census Tracts in Bellevue in the wa_tracts shapefile
bellevue <- wa_tracts %>%
filter(NAME %in% bellevue_tracts)
# Returns the merged data
mergeIt <- function(data) {
return (merge(bellevue, data, by = "work_tract", all.x = TRUE))
}
# Part 2
# setting and cleaning the table
od$w_geocode <- as.character(od$w_geocode)
od$h_geocode <- as.character(od$h_geocode)
od$w_geocode[which(length(od$w_geocode) == 14)] <- paste0("0",od$w_geocode[which(length(od$w_geocode) == 14)])
od$h_geocode[which(length(od$h_geocode) == 14)] <- paste0("0",od$h_geocode[which(length(od$h_geocode) == 14)])
# Creating columns for worktract and hometract
od$work_tract <- substr(od$w_geocode, 1, 11)
od$home_tract <- substr(od$h_geocode, 1, 11)
# Returns an aggregate dataset with the specified data
aggregateIt <- function(indexs) {
return (aggregate(. ~ work_tract + home_tract, data = indexs, FUN=sum))
}
# Aggregating WTU occupations by work_tract
## Trade, Transportation, and Utilities jobs
wtutract <- aggregateIt(od[,c(11,14,15)])
## Goods Producing industry jobs
mantract <- aggregateIt(od[,c(10,14,15)])
## Total number of jobs
total <- aggregateIt(od[,c(3,14,15)])
## All the data compiled together
overall <- aggregateIt(od[,c(3,10,11,14,15)])
(tidyverse)
(tidyverse)
(tidyverse)
(tidyverse)
library(tidyverse)
library(tigris)
library(sf)
library(reshape2)
options(tigris_class = "sf")
options(tigris_use_cache = TRUE)
# Part 1
od <- read.csv('wa_od_main_JT00_2015.csv')
rac <- read.csv('wa_rac_S000_JT00_2015.csv')
wac <- read.csv('wa_wac_S000_JT00_2015.csv')
# Read in Bellevue city boundary shape file
wa_tracts <- st_read("cb_2017_53_tract_500k.shp")
# List of all the Census Tracts in Bellevue
bellevue_tracts <- c(227.01, 227.03, 228.01, 228.03, 229.01, 230, 231, 232.01,
232.02, 233, 234.01, 234.03, 234.04, 235, 236.01, 236.03,
236.04, 237, 238.01, 238.03, 238.04, 239, 240, 247.01, 247.02, 248, 249.01,
249.02, 249.03, 250.01, 250.03, 250.05, 250.06)
# Find all the Census Tracts in Bellevue in the wa_tracts shapefile
bellevue <- wa_tracts %>%
filter(NAME %in% bellevue_tracts)
# Returns the merged data
mergeIt <- function(data) {
return (merge(bellevue, data, by = "work_tract", all.x = TRUE))
}
# Part 2
# setting and cleaning the table
od$w_geocode <- as.character(od$w_geocode)
od$h_geocode <- as.character(od$h_geocode)
od$w_geocode[which(length(od$w_geocode) == 14)] <- paste0("0",od$w_geocode[which(length(od$w_geocode) == 14)])
od$h_geocode[which(length(od$h_geocode) == 14)] <- paste0("0",od$h_geocode[which(length(od$h_geocode) == 14)])
# Creating columns for worktract and hometract
od$work_tract <- substr(od$w_geocode, 1, 11)
od$home_tract <- substr(od$h_geocode, 1, 11)
# Returns an aggregate dataset with the specified data
aggregateIt <- function(indexs) {
return (aggregate(. ~ work_tract + home_tract, data = indexs, FUN=sum))
}
# Aggregating WTU occupations by work_tract
## Trade, Transportation, and Utilities jobs
wtutract <- aggregateIt(od[,c(11,14,15)])
## Goods Producing industry jobs
mantract <- aggregateIt(od[,c(10,14,15)])
## Total number of jobs
total <- aggregateIt(od[,c(3,14,15)])
## All the data compiled together
overall <- aggregateIt(od[,c(3,10,11,14,15)])
# renaming a work tract column
colnames(bellevue)[5] <- "work_tract"
# Joining the data to only show Bellevue data
wtu_tract <- mergeIt(wtutract)
man_tract <- mergeIt(mantract)
total_tract <- mergeIt(total)
overall_bell <- mergeIt(overall)
overall_bell["WTUShare"] <- overall_bell$SI02 / overall_bell$S000
overall_bell["MANShare"] <- overall_bell$SI01 / overall_bell$S000
# Creating block level
block<- unique(od[,1:2])
nrow(check) == nrow(od)
# Added a count column for the number of sending blocks
block$count <- 1
# Get number of blocks "sending" jobs to work block
send_wb <- aggregate(. ~ w_geocode, data=block[,-2], FUN=sum)
# Use sum job variable S000 to get count of "jobs" to work block
jobs_wb <- aggregate(. ~ w_geocode, data=od[,c(1,3)], FUN=sum)
# Merge the two dataframes together by work block FIPS
work_block <- merge(send_wb, jobs_wb, by="w_geocode")
# Creates a file with home_tract and w_geocode
s <- unique(od[,c(1,15)])
# Added a count column for the number of sending tracts
s$tract_ct <- 1
# Number of tracts "sending" jobs to work block
s <- aggregate(. ~ w_geocode, data=s[,c(1,3)], FUN=sum)
work_block <- merge(work_block, s, by="w_geocode")
# Produce a matrix with a worktract as ROW and hometract as COLUMN
wtod_tract <- acast(wtu_tract, work_tract ~ home_tract, value.var = "SI02")
wtod_tract[is.na(wtod_tract)] <- 0
manod_tract <- acast(man_tract, work_tract ~ home_tract, value.var = "SI01")
manod_tract[is.na(manod_tract)] <- 0
CreateMatrix <- function(data, key) {
d <- acast(data, work_tract ~ home_tract, value.var = key)
d[is.na(d)] <- 0
return (d)
}
# Produce a matrix with a worktract as ROW and hometract as COLUMN
wtod_tract <- CreateMatrix(wtu_tract, "SI02")
View(wtod_tract)
manod_tract <- CreateMatrix(man_tract, "SI01")
total_tract <- CreateMatrix(total_tract, "S000")
View(wac)
# Make columns for work and home tract
wac$work_tract <- substr(wac$w_geocode, 1, 11)
wt_wac <- aggregate(. ~wac$work_tract,  data= wac[,c(2,11,13,14,16)], FUN=sum)
wac_bell <- mergeIt(wt_wac)
wac_bell <- mergeIt(wt_wac)
# Returns an aggregate dataset with the specified data
aggregateIt <- function(cols, indexs) {
return (aggregate(. ~ colname(cols), data = indexs, FUN=sum))
}
# Aggregating WTU occupations by work_tract
## Trade, Transportation, and Utilities jobs
wtutract <- aggregateIt("work_tract + home_tract", od[,c(11,14,15)])
return (aggregate(. ~ colnames(cols), data = indexs, FUN=sum))
# Returns an aggregate dataset with the specified data
aggregateIt <- function(cols, indexs) {
return (aggregate(. ~ colnames(cols), data = indexs, FUN=sum))
}
# Aggregating WTU occupations by work_tract
## Trade, Transportation, and Utilities jobs
wtutract <- aggregateIt("work_tract + home_tract", od[,c(11,14,15)])
wac_bell <- mergeIt(bellevue, wt_wac, by="work_tract")
View(rac)
View(rac)
wac <- wac %>%
mutate(w_geocode = replace(w_geocode, length(w_geocode) == 14, "0"))
View(wac)
nchar(530019501001024)
View(wac)
wac <- read.csv('wa_wac_S000_JT00_2015.csv')
View(wac)
## WAC
wac$w_geocode <- as.character(wac$w_geocode)
wac <- wac %>%
mutate(w_geocode = replace(w_geocode, length(w_geocode) == 14, "0"))
wac <- read.csv('wa_wac_S000_JT00_2015.csv')
View(wac)
## WAC
wac$w_geocode <- as.character(wac$w_geocode)
wac$w_geocode[which(length(wac$w_geocode) == 14)] <- paste0("0",wac$w_geocode[which(length(wac$w_geocode) == 14)])
nchar(530019501001024) == nchar(530019501001024)
530019501001024 == 530019501001024
od <- od %>%
mutate(w_geocode = replace(w_geocode, length(w_geocode) == 14, "0"),
h_geocode = replace(w_geocode, length(w_geocode) == 14, "0"))
View(od)
# Part 1
od <- read.csv('wa_od_main_JT00_2015.csv')
od <- od %>%
mutate(w_geocode = replace(w_geocode, length(w_geocode) == 14, "0"),
h_geocode = replace(w_geocode, length(w_geocode) == 14, "0"))
# Part 1
od <- read.csv('wa_od_main_JT00_2015.csv')
od$w_geocode[which(length(od$w_geocode) == 14)] <- paste0("0",od$w_geocode[which(length(od$w_geocode) == 14)])
530019501001024 == 530019501001024
View(wac)
# Merge the two dataframes together by work block FIPS
w_block <- createBlock(od, "w_geocode", c(1,3))
createBlock <- function(data, key, index) {
block <- unique(data[,1:2])
nrow(block) == nrow(data)
# Added a count column for the number of sending blocks
block$count <- 1
# Get number of blocks "sending" jobs to work block
send_b <- aggregate(. ~ key, data=block[,-2], FUN=sum)
# Use sum job variable to get count of "jobs" to work block
jobs_b <- aggregate(. ~ key, data=data[,index], FUN=sum)
# Merge the two dataframes together by work block FIPS
work_block <- merge(send_b, jobs_b, by=key)
return (work_block)
}
# Merge the two dataframes together by work block FIPS
w_block <- createBlock(od, "w_geocode", c(1,3))
createBlock <- function(data, key, index) {
block <- unique(data[,1:2])
nrow(block) == nrow(data)
# Added a count column for the number of sending blocks
block$count <- 1
# Get number of blocks "sending" jobs to work block
send_b <- aggregate(. ~ colname(key), data=block[,-2], FUN=sum)
# Use sum job variable to get count of "jobs" to work block
jobs_b <- aggregate(. ~ colname(key), data=data[,index], FUN=sum)
# Merge the two dataframes together by work block FIPS
work_block <- merge(send_b, jobs_b, by=key)
return (work_block)
}
# Merge the two dataframes together by work block FIPS
w_block <- createBlock(od, "w_geocode", c(1,3))
data$colname("w_geocode")
data$"w_geocode"
data[["w_geocode"]]
data["w_geocode"]
View(rac)
## RAC
rac$h_geocode <- as.character(rac$h_geocode)
rac <- rac %>%
mutate(h_geocode = replace(h_geocode, length(h_geocode) == 14, "0"))
# Make columns for home tract
rac$home_tract <- substr(rac$h_geocode, 1, 11)
# Aggregate the data (total number of: jobs, utilites, manufacturing,
# wholesale trade, transportation and warehousing)
ht_rac <- aggregate(. ~rac$home_tract,  data= rac[,c(2,11,13,14,16)], FUN=sum)
# Merge the data so its data pertains to bellevue tract area
wac_bell <- mergeIt(ht_rac)
return (merge(bellevue, data, by = "work_tract"))
# Returns the merged data
mergeIt <- function(data) {
return (merge(bellevue, data, by = "work_tract"))
}
# Returns the merged data
mergeIt <- function(data) {
return (merge(bellevue, data, by = "work_tract"))
}
# Merge the data so its data pertains to bellevue tract area
wac_bell <- mergeIt(ht_rac)
# Returns the merged data
mergeIt <- function(data) {
return (merge(bellevue, data, by = "work_tract"))
}
# Merge the data so its data pertains to bellevue tract area
wac_bell <- mergeIt(ht_rac)
# Returns the merged data
mergeIt <- function(data) {
return (merge(bellevue, data, by = "work_tract"))
}
# Merge the data so its data pertains to bellevue tract area
wac_bell <- mergeIt(ht_rac)
?merge
?merge
# Returns the merged data
mergeIt <- function(data) {
return (merge(bellevue, data, by = "work_tract", all = T))
}
# Merge the data so its data pertains to bellevue tract area
wac_bell <- mergeIt(ht_rac)
# Returns the merged data
mergeIt <- function(data, key) {
return (merge(bellevue, data, by = key, all.x = TRUE))
}
# Merge the data so its data pertains to bellevue tract area
wac_bell <- mergeIt(ht_rac, "home_tract")
View(bellevue)
View(bellevue)
# Find all the Census Tracts in Bellevue in the wa_tracts shapefile
bellevue <- wa_tracts %>%
filter(NAME %in% bellevue_tracts)
# Returns the merged data
mergeIt <- function(data, key) {
return (merge(bellevue, data, by = key, all.x = TRUE))
}
# Part 2
## OD data
# setting and cleaning the table
od$w_geocode <- as.character(od$w_geocode)
od$h_geocode <- as.character(od$h_geocode)
od <- od %>%
mutate(w_geocode = replace(w_geocode, length(w_geocode) == 14, "0"),
h_geocode = replace(w_geocode, length(w_geocode) == 14, "0"))
# Creating columns for worktract and hometract
od$work_tract <- substr(od$w_geocode, 1, 11)
od$home_tract <- substr(od$h_geocode, 1, 11)
View(bellevue)
View(bellevue)
# Creating columns for worktract and hometract
od$work_tract <- substr(od$w_geocode, 1, 11)
od$home_tract <- substr(od$h_geocode, 1, 11)
# Returns an aggregate dataset with the specified data
aggregateIt <- function(indexs) {
return (aggregate(. ~ work_tract + home_tract, data = indexs, FUN=sum))
}
# Aggregating WTU occupations by work_tract
## Trade, Transportation, and Utilities jobs
wtutract <- aggregateIt(od[,c(11,14,15)])
## Goods Producing industry jobs
mantract <- aggregateIt(od[,c(10,14,15)])
## Total number of jobs
total <- aggregateIt(od[,c(3,14,15)])
## All the data compiled together
overall <- aggregateIt(od[,c(3,10,11,14,15)])
# renaming a work tract column
colnames(bellevue)[5] <- "work_tract"
View(bellevue)
# Returns the merged data
mergeIt <- function(data) {
return (merge(bellevue, data, by ="work_tract", all.x = TRUE))
}
library(tidyverse)
library(tigris)
library(sf)
library(reshape2)
options(tigris_class = "sf")
options(tigris_use_cache = TRUE)
# Part 1
od <- read.csv('wa_od_main_JT00_2015.csv')
rac <- read.csv('wa_rac_S000_JT00_2015.csv')
wac <- read.csv('wa_wac_S000_JT00_2015.csv')
# Read in Bellevue city boundary shape file
wa_tracts <- st_read("cb_2017_53_tract_500k.shp")
# List of all the Census Tracts in Bellevue
bellevue_tracts <- c(227.01, 227.03, 228.01, 228.03, 229.01, 230, 231, 232.01,
232.02, 233, 234.01, 234.03, 234.04, 235, 236.01, 236.03,
236.04, 237, 238.01, 238.03, 238.04, 239, 240, 247.01, 247.02, 248, 249.01,
249.02, 249.03, 250.01, 250.03, 250.05, 250.06)
# Find all the Census Tracts in Bellevue in the wa_tracts shapefile
bellevue <- wa_tracts %>%
filter(NAME %in% bellevue_tracts)
# Returns the merged data
mergeIt <- function(data) {
return (merge(bellevue, data, by ="work_tract", all.x = TRUE))
}
## OD data
# setting and cleaning the table
od$w_geocode <- as.character(od$w_geocode)
od$h_geocode <- as.character(od$h_geocode)
od <- od %>%
mutate(w_geocode = replace(w_geocode, length(w_geocode) == 14, "0"),
h_geocode = replace(w_geocode, length(w_geocode) == 14, "0"))
# Creating columns for worktract and hometract
od$work_tract <- substr(od$w_geocode, 1, 11)
od$home_tract <- substr(od$h_geocode, 1, 11)
# Returns an aggregate dataset with the specified data
aggregateIt <- function(indexs) {
return (aggregate(. ~ work_tract + home_tract, data = indexs, FUN=sum))
}
# Aggregating WTU occupations by work_tract
## Trade, Transportation, and Utilities jobs
wtutract <- aggregateIt(od[,c(11,14,15)])
## Goods Producing industry jobs
mantract <- aggregateIt(od[,c(10,14,15)])
## Total number of jobs
total <- aggregateIt(od[,c(3,14,15)])
## All the data compiled together
overall <- aggregateIt(od[,c(3,10,11,14,15)])
# renaming a work tract column
colnames(bellevue)[5] <- "work_tract"
# Creating block level
block<- unique(od[,1:2])
wtu_tract <- mergeIt(wtutract)
man_tract <- mergeIt(mantract)
total_tract <- mergeIt(total)
overall_bell <- mergeIt(overall)
nrow(check) == nrow(od)
# Added a count column for the number of sending blocks
block$count <- 1
# Get number of blocks "sending" jobs to work block
send_wb <- aggregate(. ~ w_geocode, data=block[,-2], FUN=sum)
# Use sum job variable S000 to get count of "jobs" to work block
jobs_wb <- aggregate(. ~ w_geocode, data=od[,c(1,3)], FUN=sum)
# Merge the two dataframes together by work block FIPS
work_block <- merge(send_wb, jobs_wb, by="w_geocode")
# Creates a file with home_tract and w_geocode
s <- unique(od[,c(1,15)])
nrow(block) == nrow(od)
# Creating block level
block<- unique(od[,1:2])
nrow(block) == nrow(od)
# Added a count column for the number of sending blocks
block$count <- 1
# Get number of blocks "sending" jobs to work block
send_wb <- aggregate(. ~ w_geocode, data=block[,-2], FUN=sum)
# Use sum job variable S000 to get count of "jobs" to work block
jobs_wb <- aggregate(. ~ w_geocode, data=od[,c(1,3)], FUN=sum)
# Creating block level and check for duplicates
block<- unique(od[,1:2])
nrow(block) == nrow(od)
# Added a count column for the number of sending blocks
block$count <- 1
# Get number of blocks "sending" jobs to work block
send_wb <- aggregate(. ~ w_geocode, data=block[,-2], FUN=sum)
# Use sum job variable S000 to get count of "jobs" to work block
jobs_wb <- aggregate(. ~ w_geocode, data=od[,c(1,3)], FUN=sum)
# Merge the two dataframes together by work block FIPS
work_block <- merge(send_wb, jobs_wb, by="w_geocode")
# Creates a file with home_tract and w_geocode
s <- unique(od[,c(1,15)])
# Added a count column for the number of sending tracts
s$tract_ct <- 1
# Number of tracts "sending" jobs to work block
s <- aggregate(. ~ w_geocode, data=s[,c(1,3)], FUN=sum)
work_block <- merge(work_block, s, by="w_geocode")
createMatrix <- function(data, key) {
d <- acast(data, work_tract ~ home_tract, value.var = key)
d[is.na(d)] <- 0
return (d)
}
# Produce a matrix with a worktract as rows and hometract as columns
wtod_tract <- createMatrix(wtu_tract, "SI02")
manod_tract <- createMatrix(man_tract, "SI01")
total_tract <- createMatrix(total_tract, "S000")
## WAC
wac$w_geocode <- as.character(wac$w_geocode)
wac <- wac %>%
mutate(w_geocode = replace(w_geocode, length(w_geocode) == 14, "0"))
# Make columns for work and home tract
wac$work_tract <- substr(wac$w_geocode, 1, 11)
# Aggregate the data (total number of: jobs, utilites, manufacturing,
# wholesale trade, transportation and warehousing)
wt_wac <- aggregate(. ~wac$work_tract,  data= wac[,c(2,11,13,14,16)], FUN=sum)
# Merge the data so its data pertains to bellevue tract area
wac_bell <- mergeIt(wt_wac)
# Merge the data so its data pertains to bellevue tract area
wac_bell <- merge(bellevue, wt_wac, by="work_tract", all.y = T)
# Merge the data so its data pertains to bellevue tract area
wac_bell <- merge(bellevue, wt_wac, by="work_tract", all.y = T)
View(wac)
View(bellevue)
# Merge the data so its data pertains to bellevue tract area
wac_bell <- merge(bellevue, wt_wac, by="work_tract", all = T)
# Merge the data so its data pertains to bellevue tract area
wac_bell <- merge(bellevue, wt_wac, by= "work_tract", all.x = T)
# Merge the data so its data pertains to bellevue tract area
wac_bell <- merge(bellevue, wt_wac, by = "work_tract", all.x = T)
# Merge the data so its data pertains to bellevue tract area
wac_bell <- merge(bellevue, wt_wac, by.y = "work_tract", all.x = T)
# Merge the data so its data pertains to bellevue tract area
wac_bell <- merge(bellevue, wt_wac, by.y = "work_tract")
# Merge the data so its data pertains to bellevue tract area
wac_bell <- merge(bellevue, wt_wac, by.x = "work_tract")
# renaming a work tract column
colnames(bellevue)[5] <- paste("work_tract")
View(bellevue)
# Merge the data so its data pertains to bellevue tract area
wac_bell <- merge(bellevue, wt_wac, by = "work_tract")
name(wac)[25] == name(bellevue)[5]
name(wac)[25] == name(bellevue)[5]
names(wac)[25] == names(bellevue)[5]
print(names(wac)[25])
print(names(wac)[26])
print(names(wac)[54])
print(names(bellevue)[54])
print(names(bellevue)[5])
names(bellevue)[5] == names(wac)[54]
colnames(bellevue)[5] == colnames(wac)[54]
# Merge the data so its data pertains to bellevue tract area
wac_bell <- merge(bellevue, wt_wac, by = names(bellevue)[5])
# Aggregate the data (total number of: jobs, utilites, manufacturing,
# wholesale trade, transportation and warehousing)
wt_wac <- aggregate(. ~wac$work_tract,  data= wac[,c(2,11,13,14,16)], FUN=sum)
View(wt_wac)
# Aggregate the data (total number of: jobs, utilites, manufacturing,
# wholesale trade, transportation and warehousing)
wt_wac <- aggregate(. ~work_tract,  data= wac[,c(2,11,13,14,16)], FUN=sum)
colnames(wt_wac$`wac$work_tract`) <- "work_tract"
colnames(wt_wac)[['wac$work_tract']] <- "work_tract"
colnames(wt_wac)[1] <- "work_tract"
# Merge the data so its data pertains to bellevue tract area
wac_bell <- mergeIt(wt_wac)
wac["w_geocode"]
